(function(a,b){"object"==typeof exports&&"undefined"!=typeof module?b(exports):"function"==typeof define&&define.amd?define(["exports"],b):(a=a||self,b(a.COMMON={}))})(this,function(a){'use strict';function b(a){var b={},c=b.toString,d=b.hasOwnProperty,e=d.toString,f=e.call(Object);if(!a||"[object Object]"!==c.call(a))return!1;var g=Object.getPrototypeOf(a);if(!g)return!0;var h=d.call(g,"constructor")&&g.constructor;return"function"==typeof h&&e.call(h)===f}function c(){for(var a=[],d=0;d<arguments.length;d++)a[d]=arguments[d];var e,f,g,h,j,k,l=arguments[0]||{},m=1,n=arguments.length,o=!1;for("boolean"==typeof l&&(o=l,l=arguments[m]||{},m++),"object"!=typeof l&&"function"!=typeof l&&(l={}),m===n&&(l=this,m--);m<n;m++)// tslint:disable-next-line: no-conditional-assignment
if(null!==(e=arguments[m]))for(f in e)if(e.hasOwnProperty(f)){if(j=l[f],h=e[f],l===h)continue;// deep clone
// tslint:disable-next-line: no-conditional-assignment
o&&h&&(b(h)||(k=Array.isArray(h)))?(k?(k=!1,g=j&&Array.isArray(j)?j:[]):g=j&&b(j)?j:{},l[f]=c(o,g,h)):void 0!==h&&(l[f]=h)}return l}function d(a){var b=0;a.renderer.addListener("prerender",function(){b=0}),a.renderer.addListener("postrender",function(){j=b});var c=a.renderer.gl.drawElements.bind(a.renderer.gl);a.renderer.gl.drawElements=function(){for(var a=[],d=0;d<arguments.length;d++)a[d]=arguments[d];return b++,c.apply(void 0,a)}}function e(){var a=performance.now(),b=0,c=function(){var d=performance.now();b++,d>=1e3+a&&(k=Math.round(1e3*b/(d-a)),b=0,a=d),requestAnimationFrame(c)};c()}function f(a,b){var c=document.createElement("div");c.id="stats",c.style.cssText="position:fixed;\n        left: 3rem;\n        pointer-events: none;\n        user-select: none;\n        z-index:10000;\n        color: #fff;\n        font-size: 3rem;\n        line-height: 3rem;",c.innerHTML=""+(a?"<p id='fps'>fps:</p>":"")+(b?"<p id='drawcalls'>drawCalls:</p>":""),document.body.appendChild(c);var d=document.querySelector("#stats"),e=window.innerHeight-(d?d.clientHeight:0);c.style.top=e-10+"px"}function g(){var a=document.querySelector("#stats");setTimeout(function(){var b=document.getElementById("stats");b&&(b.style.top=window.innerHeight-(a?a.clientHeight:0)-10+"px")},100)}function h(a,b){void 0===b&&(b=["fps","draw-calls"]);var c=b.includes("fps"),h=b.includes("draw-calls");h&&d(a),c&&e(),f(c,h);var i=document.querySelector("#drawcalls"),l=document.querySelector("#fps");setInterval(function(){j&&i&&(i.innerHTML="drawCalls: "+j),k&&l&&(l.innerHTML="fps: "+k)},200),window.addEventListener("resize",function(){return g()})}var j,k,l=function(a,b){return b={exports:{}},a(b,b.exports),b.exports}(function(a){/**
	 * Constructor to create a storage for our `EE` objects.
	 * An `Events` instance is a plain object whose properties are event names.
	 *
	 * @constructor
	 * @private
	 */function b(){}//
// We try to not inherit from `Object.prototype`. In some engines creating an
// instance in this way is faster than calling `Object.create(null)` directly.
// If `Object.create(null)` is not supported we prefix the event names with a
// character to make sure that the built-in object properties are not
// overridden or used as an attack vector.
//
/**
	 * Representation of a single event listener.
	 *
	 * @param {Function} fn The listener function.
	 * @param {*} context The context to invoke the listener with.
	 * @param {Boolean} [once=false] Specify if the listener is a one-time listener.
	 * @constructor
	 * @private
	 */function c(a,b,c){this.fn=a,this.context=b,this.once=c||!1}/**
	 * Add a listener for a given event.
	 *
	 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
	 * @param {(String|Symbol)} event The event name.
	 * @param {Function} fn The listener function.
	 * @param {*} context The context to invoke the listener with.
	 * @param {Boolean} once Specify if the listener is a one-time listener.
	 * @returns {EventEmitter}
	 * @private
	 */function d(a,b,d,e,f){if("function"!=typeof d)throw new TypeError("The listener must be a function");var g=new c(d,e||a,f),i=h?h+b:b;return a._events[i]?a._events[i].fn?a._events[i]=[a._events[i],g]:a._events[i].push(g):(a._events[i]=g,a._eventsCount++),a}/**
	 * Clear event by name.
	 *
	 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
	 * @param {(String|Symbol)} evt The Event name.
	 * @private
	 */function e(a,c){0==--a._eventsCount?a._events=new b:delete a._events[c]}/**
	 * Minimal `EventEmitter` interface that is molded against the Node.js
	 * `EventEmitter` interface.
	 *
	 * @constructor
	 * @public
	 */function f(){this._events=new b,this._eventsCount=0}/**
	 * Return an array listing the events for which the emitter has registered
	 * listeners.
	 *
	 * @returns {Array}
	 * @public
	 */var g=Object.prototype.hasOwnProperty,h="~";/**
	 * Return the listeners registered for a given event.
	 *
	 * @param {(String|Symbol)} event The event name.
	 * @returns {Array} The registered listeners.
	 * @public
	 */ /**
	 * Return the number of listeners listening to a given event.
	 *
	 * @param {(String|Symbol)} event The event name.
	 * @returns {Number} The number of listeners.
	 * @public
	 */ /**
	 * Calls each of the listeners registered for a given event.
	 *
	 * @param {(String|Symbol)} event The event name.
	 * @returns {Boolean} `true` if the event had listeners, else `false`.
	 * @public
	 */ /**
	 * Add a listener for a given event.
	 *
	 * @param {(String|Symbol)} event The event name.
	 * @param {Function} fn The listener function.
	 * @param {*} [context=this] The context to invoke the listener with.
	 * @returns {EventEmitter} `this`.
	 * @public
	 */ /**
	 * Add a one-time listener for a given event.
	 *
	 * @param {(String|Symbol)} event The event name.
	 * @param {Function} fn The listener function.
	 * @param {*} [context=this] The context to invoke the listener with.
	 * @returns {EventEmitter} `this`.
	 * @public
	 */ /**
	 * Remove the listeners of a given event.
	 *
	 * @param {(String|Symbol)} event The event name.
	 * @param {Function} fn Only remove the listeners that match this function.
	 * @param {*} context Only remove the listeners that have this context.
	 * @param {Boolean} once Only remove one-time listeners.
	 * @returns {EventEmitter} `this`.
	 * @public
	 */ /**
	 * Remove all listeners, or those of the specified event.
	 *
	 * @param {(String|Symbol)} [event] The event name.
	 * @returns {EventEmitter} `this`.
	 * @public
	 */ //
// Alias methods names because people roll like that.
//
//
// Expose the prefix.
//
//
// Allow `EventEmitter` to be imported as module namespace.
//
Object.create&&(b.prototype=Object.create(null),!new b().__proto__&&(h=!1)),f.prototype.eventNames=function(){var a,b,c=[];if(0===this._eventsCount)return c;for(b in a=this._events)g.call(a,b)&&c.push(h?b.slice(1):b);return Object.getOwnPropertySymbols?c.concat(Object.getOwnPropertySymbols(a)):c},f.prototype.listeners=function(a){var b=h?h+a:a,c=this._events[b];if(!c)return[];if(c.fn)return[c.fn];for(var d=0,e=c.length,f=Array(e);d<e;d++)f[d]=c[d].fn;return f},f.prototype.listenerCount=function(a){var b=h?h+a:a,c=this._events[b];return c?c.fn?1:c.length:0},f.prototype.emit=function(a,b,c,d,e,f){var g=h?h+a:a;if(!this._events[g])return!1;var k,l,m=this._events[g],n=arguments.length;if(m.fn){switch(m.once&&this.removeListener(a,m.fn,void 0,!0),n){case 1:return m.fn.call(m.context),!0;case 2:return m.fn.call(m.context,b),!0;case 3:return m.fn.call(m.context,b,c),!0;case 4:return m.fn.call(m.context,b,c,d),!0;case 5:return m.fn.call(m.context,b,c,d,e),!0;case 6:return m.fn.call(m.context,b,c,d,e,f),!0;}for(l=1,k=Array(n-1);l<n;l++)k[l-1]=arguments[l];m.fn.apply(m.context,k)}else{var o,p=m.length;for(l=0;l<p;l++)switch(m[l].once&&this.removeListener(a,m[l].fn,void 0,!0),n){case 1:m[l].fn.call(m[l].context);break;case 2:m[l].fn.call(m[l].context,b);break;case 3:m[l].fn.call(m[l].context,b,c);break;case 4:m[l].fn.call(m[l].context,b,c,d);break;default:if(!k)for(o=1,k=Array(n-1);o<n;o++)k[o-1]=arguments[o];m[l].fn.apply(m[l].context,k);}}return!0},f.prototype.on=function(a,b,c){return d(this,a,b,c,!1)},f.prototype.once=function(a,b,c){return d(this,a,b,c,!0)},f.prototype.removeListener=function(a,b,c,d){var f=h?h+a:a;if(!this._events[f])return this;if(!b)return e(this,f),this;var g=this._events[f];if(g.fn)g.fn!==b||d&&!g.once||c&&g.context!==c||e(this,f);else{for(var j=0,k=[],l=g.length;j<l;j++)(g[j].fn!==b||d&&!g[j].once||c&&g[j].context!==c)&&k.push(g[j]);//
// Reset the array, or remove it completely if we have no more listeners.
//
k.length?this._events[f]=1===k.length?k[0]:k:e(this,f)}return this},f.prototype.removeAllListeners=function(a){var c;return a?(c=h?h+a:a,this._events[c]&&e(this,c)):(this._events=new b,this._eventsCount=0),this},f.prototype.off=f.prototype.removeListener,f.prototype.addListener=f.prototype.on,f.prefixed=h,f.EventEmitter=f,a.exports=f}),m=new l;a.event=m,a.eventify=function(a){return a.callbacks={},a.on=function(b,c){if(!b||!c)return a;!a.hasOwnProperty("callbacks")&&(a.callbacks||(a.callbacks={}));var d,e=b.split(" ");return e.map(function(b){(d=a.callbacks)[b]||(d[b]=[]),a.callbacks[b].push(c)}),a},a.emit=function(){for(var b=[],c=0;c<arguments.length;c++)b[c]=arguments[c];var d=b.shift(),e=d.split(" ");return e.map(function(c){var d=null===a.callbacks?[]:a.callbacks[c]||[];d.length&&d.map(function(c){c&&c.apply(a,b)})}),a},a.off=function(){for(var b=[],c=0;c<arguments.length;c++)b[c]=arguments[c];if(0===b.length)a.callbacks={};else{var d=b.shift(),e=d.split(" ");e.map(function(b){return delete a.callbacks[b]})}return a},a},a.extend=c,a.showPerformance=function(a){return void 0===a&&(a=["fps","draw-calls"]),function(b){return b.on("created",function(b){var c=b.game;return h(c,a)})}},a.showPerformancePannel=h,a.usesify=function(a){return function(b){var c=Array.isArray(a)?a:[a];c.map(function(c){if("function"==typeof c)c(b);else throw Error("[@amoy/components]error: addon "+a+" must be a function;")})}},Object.defineProperty(a,"__esModule",{value:!0})});
//# sourceMappingURL=index.min.js.map
