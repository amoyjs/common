function type(a){var b={},c=b.toString.call(a);if(null==a)return a+"";"Boolean Number String Function Array Date RegExp Object Error Symbol".split(" ").forEach(function(a){b["[object "+a+"]"]=a.toLowerCase()});return"object"==typeof a||"function"==typeof a?b[c]||"object":typeof a}function isPlainObject(a){var b,c,d={},e=d.toString,f=d.hasOwnProperty,g=f.toString,h=g.call(Object);return!!(a&&"[object Object]"===e.call(a))&&(!(b=Object.getPrototypeOf(a),!!b)||(c=f.call(b,"constructor")&&b.constructor,"function"==typeof c&&g.call(c)===h))}function extend(){for(var a=[],b=0;b<arguments.length;b++)a[b]=arguments[b];var c,d,e,f,g,h,j=arguments[0]||{},k=1,l=arguments.length,m=!1;for("boolean"==typeof j&&(m=j,j=arguments[k]||{},k++),"object"!=typeof j&&"function"!==type(j)&&(j={}),k===l&&(j=this,k--);k<l;k++)//
if(null!==(c=arguments[k]))// for in source object
for(d in c)(g=j[d],f=c[d],j!=f)&&(m&&f&&(isPlainObject(f)||(h=Array.isArray(f)))?(h?(h=!1,e=g&&Array.isArray(g)?g:[]):e=g&&isPlainObject(g)?g:{},j[d]=extend(m,e,f)):void 0!==f&&(j[d]=f));// deep clone
return j}export{extend,isPlainObject,type};
//# sourceMappingURL=common.es.min.js.map
