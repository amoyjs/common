{"version":3,"file":"common.min.js","sources":["../lib/extend.ts","../lib/index.ts","../lib/eventify.ts","../lib/usesify.ts"],"sourcesContent":["function isPlainObject(object) {\n    // tslint:disable-next-line: one-variable-per-declaration\n    let proto,\n        ctor,\n        class2type = {},\n        toString = class2type.toString, // Object.prototype.toString\n        hasOwn = class2type.hasOwnProperty,\n        fnToString = hasOwn.toString, // Object.toString/Function.toString\n        ObjectFunctionString = fnToString.call(Object) // 'function Object() { [native code] }'\n\n    if (!object || toString.call(object) !== '[object Object]') {\n        return false\n    }\n\n    // According to the object created by `Object.create(null)` is no `prototype`\n    proto = Object.getPrototypeOf(object)\n    if (!proto) {\n        return true\n    }\n\n    ctor = hasOwn.call(proto, 'constructor') && proto.constructor\n    return typeof ctor === 'function' && fnToString.call(ctor) === ObjectFunctionString\n}\n\nexport function extend(this: any, ...args) {\n    let options\n    let name\n    let clone\n    let copy\n    let source\n    let copyIsArray\n    let target = arguments[0] || {}\n    let i = 1\n    let length = arguments.length\n    let deep = false\n\n    if (typeof target === 'boolean') {\n        deep = target\n        target = arguments[i] || {}\n        i++\n    }\n\n    if (typeof target !== 'object' && typeof target !== 'function') {\n        target = {}\n    }\n\n    if (i === length) {\n        target = this\n        i--\n    }\n\n    for (; i < length; i++) {\n        // tslint:disable-next-line: no-conditional-assignment\n        if ((options = arguments[i]) !== null) {\n            for (name in options) {\n                if (options.hasOwnProperty(name)) {\n                    source = target[name]\n                    copy = options[name]\n\n                    if (target === copy) {\n                        continue\n                    }\n\n                    // deep clone\n                    // tslint:disable-next-line: no-conditional-assignment\n                    if (deep && copy && (isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n                        if (copyIsArray) {\n                            copyIsArray = false\n                            clone = source && Array.isArray(source) ? source : []\n                        } else {\n                            clone = source && isPlainObject(source) ? source : {}\n                        }\n\n                        target[name] = extend(deep, clone, copy)\n                    } else if (copy !== undefined) {\n                        target[name] = copy\n                    }\n                }\n            }\n        }\n    }\n\n    return target\n}\n","export * from \"./eventify\"\nexport * from \"./extend\"\nexport * from \"./usesify\"\n\nexport function type(object: any) {\n    const class2type = {}\n    const type = class2type.toString.call(object)\n    const typeString = 'Boolean Number String Function Array Date RegExp Object Error Symbol'\n\n    if (object == null) return object + ''\n\n    typeString.split(' ').forEach((type) => {\n        class2type[`[object ${type}]`] = type.toLowerCase()\n    })\n\n    const isObject = typeof object === 'object'\n    const isFn = typeof object === 'function'\n    return isObject || isFn ? class2type[type] || 'object' : typeof object\n}\n\nexport function forin(object: object, fn: (key?: string, value?: any) => void) {\n    if (typeof object === 'object') {\n        for (const key in object) {\n            if (object.hasOwnProperty(key)) {\n                const value = object[key]\n                fn(key, value)\n            }\n        }\n    }\n}\n\nexport const getValue = (root: any, get: string) => {\n    if (type(root) !== 'object') return root\n    let value = root\n    const keyArr = get.split('.')\n    for (let i = 0, l = keyArr.length; i < l; i++) {\n        const v = keyArr[i]\n        if (v) {\n            if (value[v]) {\n                value = value[v]\n            } else {\n                value = undefined\n                break\n            }\n        }\n    }\n    return value\n}\n\nexport const setValue = (tar: any, key: string, value: any) => {\n    if (type(tar) !== 'object') {\n        throw new Error('setValue tar muse be a object!')\n    } else {\n        const pIndex = key.trim().indexOf('.')\n        if (pIndex > 0 && pIndex < key.length - 1) {\n            const keyArr = key.trim().split('.')\n            let _obj = tar\n            let wrongKey = ''\n            for (let i = 0, l = keyArr.length - 1; i < l; i++) {\n                const v = keyArr[i]\n                if (typeof _obj[v] === 'object') {\n                    _obj = _obj[v]\n                } else if (typeof _obj[v] === 'undefined') {\n                    wrongKey = v\n                }\n            }\n\n            if (!wrongKey) {\n                const lastKey = keyArr[keyArr.length - 1]\n                _obj[lastKey] = value\n            } else {\n                throw new Error(`the key(${wrongKey}) is not in tar obj!`)\n            }\n        } else {\n            tar[key.replace(/\\./g, '')] = value\n        }\n    }\n}\n","export function eventify(target: any) {\n    target.callbacks = {}\n\n    target.on = (eventName: string, callback: () => void) => {\n        if (!eventName || !callback) return target\n        if (!target.hasOwnProperty(\"callbacks\")) target.callbacks || (target.callbacks = {})\n\n        let base: any\n        const events = eventName.split(\" \")\n        events.map((eventName) => {\n            (base = target.callbacks)[eventName] || (base[eventName] = [])\n            target.callbacks[eventName].push(callback)\n        })\n\n        return target\n    }\n\n    target.emit = (...args: any) => {\n        const eventName = args.shift() as string\n        const events = eventName.split(\" \")\n        events.map((eventName) => {\n            const list = target.callbacks !== null ? target.callbacks[eventName] || [] : []\n            if (list.length) {\n                list.map((item: () => void) => {\n                    item && item.apply(target, args)\n                })\n            }\n        })\n\n        return target\n    }\n\n    target.off = (...args: any) => {\n        if (args.length === 0) {\n            target.callbacks = {}\n        } else {\n            const eventName = args.shift() as string\n            const events = eventName.split(\" \")\n            events.map((eventName) => delete target.callbacks[eventName])\n        }\n\n        return target\n    }\n\n    return target\n}\n","type addon = (core: any) => void\n\nexport function usesify(addons: addon | addon[]) {\n    return function use(target) {\n        const _addons = Array.isArray(addons) ? addons : [addons]\n        _addons.map((addon) => {\n            if (typeof addon === \"function\") {\n                addon(target)\n            } else {\n                throw Error(`[@amoy/components]error: addon ${addons} must be a function;`)\n            }\n        })\n    }\n}\n"],"names":["isPlainObject","object","proto","ctor","class2type","toString","hasOwn","hasOwnProperty","fnToString","ObjectFunctionString","call","Object","getPrototypeOf","constructor","type","split","forEach","toLowerCase","target","callbacks","on","eventName","callback","map","base","push","emit","_i","args","shift","list","length","item","apply","off","extend","options","name","clone","copy","source","copyIsArray","arguments","i","deep","this","Array","isArray","undefined","fn","key","root","get","value","keyArr","l","v","tar","Error","pIndex","trim","indexOf","_obj","wrongKey","replace","addons","addon"],"mappings":"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"}